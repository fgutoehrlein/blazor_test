@using Database
@using Models
@using Logic
@inject InMemoryContext dbInMemory
@inject InternalDbService internalDbService

@page "/inMemory"
<h3>InMemoryDb</h3>
<table class="table">
    <thead>
        <tr>
            <th>
                @nameof(Book.Title)
            </th>
            <th>
                @nameof(Book.Author)
            </th>
            <th>
                @nameof(Book.BorrowDate)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in BookList)
        {
            <tr>
                <th>
                    @book.Title
                </th>
                <th>
                    @book.Author
                </th>
                @if (book.BorrowDate != null)
                {
                    <th>@book.BorrowDate</th>
                }
                else
                {
                    <th>no borrow date</th>
                }
            </tr>
        }
    </tbody>
</table>

<button class="btn btn-primary" @onclick="()=>AddNewBookModal.Open()">add new book</button>
<BlazorServerSide.Pages.Components.ModalComponent @ref="AddNewBookModal">
    <Title>
        borrow new book here
    </Title>
    <Body>
        <p>Title</p>
        <input class="form-control" @bind="NewBookTitle" placeholder="input title name here"/>
        <br />
        <p>Author</p>
        <input class="form-control" @bind="NewBookAuthor" placeholder="input author name here"/>
        <br />
        <button class="btn btn-primary" @onclick="()=>AddNewlyBorrowedBookToDb()">save</button>
    </Body>
</BlazorServerSide.Pages.Components.ModalComponent>
@code {

    public bool things;
    public List<Book> BookList = new List<Book>();
    private Pages.Components.ModalComponent AddNewBookModal = new Components.ModalComponent();

    public string NewBookTitle;
    public string NewBookAuthor;

    protected override async Task OnInitializedAsync()
    {
        BookList = await internalDbService.LoadBooks();
    }
    public async Task AddNewlyBorrowedBookToDb()
    {
        if(string.IsNullOrEmpty(NewBookTitle) || string.IsNullOrEmpty(NewBookAuthor))
        {
            return;
        }
        await internalDbService.InsertNewBook(NewBookTitle, NewBookAuthor);
        BookList = await internalDbService.LoadBooks();

        SetNewBookParametersToNull();
    }
    public void SetNewBookParametersToNull()
    {
        AddNewBookModal.Close();
        NewBookAuthor = null;
        NewBookAuthor = null;
    }
}
